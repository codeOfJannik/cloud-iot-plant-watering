{
    "detectorModelDefinition": {
        "states": [
            {
                "stateName": "CheckState",
                "onInput": {
                    "events": [
                        {
                            "eventName": "CalculateAverage",
                            "condition": "currentInput(\"SoilMoistureInput\")",
                            "actions": [
                                {
                                    "setVariable": {
                                        "variableName": "average",
                                        "value": "( $input.SoilMoistureInput.data.state.value + $variable.average ) / 2"
                                    }
                                }
                            ]
                        },
                        {
                            "eventName": "SetThresholds",
                            "condition": "currentInput(\"ControlPanelInput\")",
                            "actions": [
                                {
                                    "setVariable": {
                                        "variableName": "Bed1Threshold",
                                        "value": "$input.ControlPanelInput.data.bed_1_soilMoisture_threshold.state.value"
                                    }
                                },
                                {
                                    "setVariable": {
                                        "variableName": "Bed2Threshold",
                                        "value": "$input.ControlPanelInput.data.bed_2_soilMoisture_threshold.state.value"
                                    }
                                }
                            ]
                        }
                    ],
                    "transitionEvents": [
                        {
                            "eventName": "IsNormal",
                            "condition": "($variable.IsValveOpen && $variable.average  > ($variable.Bed1Threshold +10)) || (!$variable.IsValveOpen && $variable.average >= $variable.Bed1Threshold)",
                            "actions": [],
                            "nextState": "NormalSoil"
                        },
                        {
                            "eventName": "IsDry",
                            "condition": "($variable.IsValveOpen && $variable.average  < ($variable.Bed1Threshold +10)) || (!$variable.IsValveOpen && $variable.average <= $variable.Bed1Threshold)",
                            "actions": [
                                {
                                    "resetTimer": {
                                        "timerName": "CheckTimer"
                                    }
                                }
                            ],
                            "nextState": "DrySoil"
                        }
                    ]
                },
                "onEnter": {
                    "events": []
                },
                "onExit": {
                    "events": []
                }
            },
            {
                "stateName": "DrySoil",
                "onInput": {
                    "events": [
                        {
                            "eventName": "calculateAverage",
                            "condition": "currentInput(\"SoilMoistureInput\")",
                            "actions": [
                                {
                                    "setVariable": {
                                        "variableName": "average",
                                        "value": "($input.SoilMoistureInput.data.state.value + $variable.average ) / 2"
                                    }
                                }
                            ]
                        },
                        {
                            "eventName": "setThresholds",
                            "condition": "currentInput(\"ControlPanelInput\")",
                            "actions": [
                                {
                                    "setVariable": {
                                        "variableName": "Bed1Threshold",
                                        "value": "$input.ControlPanelInput.data.bed_1_soilMoisture_threshold.state.value"
                                    }
                                },
                                {
                                    "setVariable": {
                                        "variableName": "Bed2Threshold",
                                        "value": "$input.ControlPanelInput.data.bed_2_soilMoisture_threshold.state.value"
                                    }
                                }
                            ]
                        }
                    ],
                    "transitionEvents": [
                        {
                            "eventName": "TimerExpired",
                            "condition": "timeout(\"CheckTimer\")",
                            "actions": [],
                            "nextState": "CheckState"
                        }
                    ]
                },
                "onEnter": {
                    "events": [
                        {
                            "eventName": "OpenWaterValve",
                            "condition": "true",
                            "actions": [
                                {
                                    "iotTopicPublish": {
                                        "mqttTopic": "$aws/things/water_valve/shadow/update",
                                        "payload": {
                                            "contentExpression": "'{\\\"state\\\": {\\\"desired\\\":  {\\\"water_valve_open\\\": true}}}'",
                                            "type": "JSON"
                                        }
                                    }
                                },
                                {
                                    "setVariable": {
                                        "variableName": "IsValveOpen",
                                        "value": "true"
                                    }
                                }
                            ]
                        },
                        {
                            "eventName": "SetTimer",
                            "condition": "true",
                            "actions": [
                                {
                                    "setTimer": {
                                        "timerName": "CheckTimer",
                                        "seconds": 180
                                    }
                                }
                            ]
                        }
                    ]
                },
                "onExit": {
                    "events": []
                }
            },
            {
                "stateName": "NormalSoil",
                "onInput": {
                    "events": [
                        {
                            "eventName": "calculateAverage",
                            "condition": "currentInput(\"SoilMoistureInput\")",
                            "actions": [
                                {
                                    "setVariable": {
                                        "variableName": "average",
                                        "value": "( $input.SoilMoistureInput.data.state.value + $variable.average ) / 2"
                                    }
                                }
                            ]
                        },
                        {
                            "eventName": "setThresholds",
                            "condition": "currentInput(\"ControlPanelInput\")",
                            "actions": [
                                {
                                    "setVariable": {
                                        "variableName": "Bed1Threshold",
                                        "value": "$input.ControlPanelInput.data.bed_1_soilMoisture_threshold.state.value"
                                    }
                                },
                                {
                                    "setVariable": {
                                        "variableName": "Bed2Threshold",
                                        "value": "$input.ControlPanelInput.data.bed_2_soilMoisture_threshold.state.value"
                                    }
                                }
                            ]
                        }
                    ],
                    "transitionEvents": [
                        {
                            "eventName": "TimerExpired",
                            "condition": "timeout(\"CheckTimer\")",
                            "actions": [],
                            "nextState": "CheckState"
                        }
                    ]
                },
                "onEnter": {
                    "events": [
                        {
                            "eventName": "CloseWaterValve",
                            "condition": "true",
                            "actions": [
                                {
                                    "iotTopicPublish": {
                                        "mqttTopic": "$aws/things/water_valve/shadow/update",
                                        "payload": {
                                            "contentExpression": "'{\\\"state\\\": {\\\"desired\\\":  {\\\"water_valve_open\\\": false}}}'",
                                            "type": "JSON"
                                        }
                                    }
                                },
                                {
                                    "setVariable": {
                                        "variableName": "IsValveOpen",
                                        "value": "false"
                                    }
                                }
                            ]
                        },
                        {
                            "eventName": "InitAverageVar",
                            "condition": "isUndefined($variable.average)",
                            "actions": [
                                {
                                    "setVariable": {
                                        "variableName": "average",
                                        "value": "50"
                                    }
                                }
                            ]
                        },
                        {
                            "eventName": "InitThresholdVars",
                            "condition": "isUndefined($variable.Bed1Threshold) || isUndefined($variable.Bed2Threshold)",
                            "actions": [
                                {
                                    "setVariable": {
                                        "variableName": "Bed1Threshold",
                                        "value": "50"
                                    }
                                },
                                {
                                    "setVariable": {
                                        "variableName": "Bed2Threshold",
                                        "value": "60"
                                    }
                                }
                            ]
                        },
                        {
                            "eventName": "CreateTimer",
                            "condition": "true",
                            "actions": [
                                {
                                    "setTimer": {
                                        "timerName": "CheckTimer",
                                        "seconds": 180
                                    }
                                }
                            ]
                        }
                    ]
                },
                "onExit": {
                    "events": []
                }
            }
        ],
        "initialStateName": "NormalSoil"
    },
    "detectorModelDescription": "Soil Moisture Water on, off Logic",
    "detectorModelName": "SoilMoistureLogic",
    "evaluationMethod": "BATCH",
    "roleArn": "arn:aws:iam::002917872344:role/service-role/SoilMoistureLogic-Role"
}